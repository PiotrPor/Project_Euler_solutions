// projecteuler.net/problem=12
/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
*/

// 12,375th triangle number (76,576,500) has 576 divisors

#include <iostream>

unsigned long long make_triangle_number(unsigned long long n);

int main()
{
    unsigned long long which, trnum, a;
    int how_many_divisors;
    which = 1;
    while (true)
    {
        trnum = make_triangle_number(which);
        if (trnum >= (unsigned long long)16000000000000000000)
        {
            std::cout << "Error: such number seems to be bigger than 1.6*10^19" << std::endl;
            break;
        }
        how_many_divisors = 0;
        for (a = 1; a <= trnum; a++)
        {
            if (trnum % a == 0)
            {
                how_many_divisors += 1;
            }
        }
        if (how_many_divisors >= 500)
        {
            std::cout << which << "th triangle number, which is " << trnum << " has more than 500 divisors" << std::endl;
            break;
        }
        which += 1;
    }
    return 0;
}

unsigned long long make_triangle_number(unsigned long long n)
{
    return (n * (n + 1)) / (unsigned long long)2;
}