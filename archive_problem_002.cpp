// projecteuler.net/problem=2
/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>
#include <vector>

int give_Fibonacci_number(unsigned int which);

int main()
{
    std::vector<int> all_analyzed;
    unsigned int a = 1;
    int current_Fib;
    int big_sum = 0;
    while (true)
    {
        current_Fib = give_Fibonacci_number(a);
        if (current_Fib > 4000000)
        {
            break;
        }
        all_analyzed.push_back(current_Fib);
        a++;
    }
    for (a = 0; a < all_analyzed.size(); a++)
    {
        if (all_analyzed[a] % 2 == 0)
        {
            big_sum += all_analyzed[a];
        }
    }
    std::cout << "Sum of those Fibonacci numbers is " << big_sum << std::endl;
    return 0;
}

int give_Fibonacci_number(unsigned int which)
{
    if (which == 1)
    {
        return 1;
    }
    if (which == 2)
    {
        return 2;
    }
    if (which >= 3)
    {
        return give_Fibonacci_number(which - 1) + give_Fibonacci_number(which - 2);
    }
    return 0;
}